Import module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
Test 1:
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]
Test 2:

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]
Test 3:
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
Test 4:
    >>> matrix_mul([[1, 2]], [[1, 2]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
Test 5:
    >>> matrix_mul([[0]], [[1, 3]])
    [[0, 0]]

Test 5:
>>> matrix_mul([[1, 'a']], [[2, 2], [2, 2]])
Traceback (most recent call last):
TypeError: unsupported operand type(s) for +=: 'int' and 'str'

Test 6:
    >>> matrix_mul([[1, 2]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
Test 7:

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
Test 8:

    >>> matrix_mul([[1, 1]], [[3, -1]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
Test 9:
    >>> matrix_mul([[-1]], [[1, 2]])
    [[-1, -2]]